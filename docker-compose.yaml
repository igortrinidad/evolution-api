services:

  evolution_api:
    container_name: evolution_api
    image: evolution/api:local
    build: .
    restart: always
    volumes:
      - ./docker_volumes/evolution_instances:/evolution/instances
    network_mode: host
    env_file:
      - .env
    expose:
      - ${SERVER_PORT}

  evolution_api_postgres:
    container_name: evolution_api_postgres
    image: postgres:15
    networks:
      - evolution-net
    command: ["postgres", "-c", "max_connections=1000"]
    restart: always
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./docker_volumes/evolution_postgres_data:/var/lib/postgresql/data
    expose:
      - ${POSTGRES_PORT}

  evolution_api_redis:
    image: redis:latest
    networks:
      - evolution-net
    container_name: evolution_api_redis
    command: >
      redis-server --port 6379 --appendonly yes
    restart: always
    volumes:
      - ./docker_volumes/evolution_redis_data:/data
    ports:
      - ${REDIS_PORT}:6379

  evolution_api_rabbitmq:
    container_name: evolution_api_rabbitmq
    image: rabbitmq:management
    restart: always
    environment:
      - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    volumes:
      - ./docker_volumes/evolution_rabbitmq_data:/var/lib/rabbitmq/
    ports:
      - ${RABBITMQ_PORT}:5672
      - ${RABBITMQ_ADMIN_PORT}:15672

networks:
  evolution-net:
    name: evolution-net
    driver: bridge

volumes:
  evolution_instances:
  evolution_postgres_data:
  evolution_redis_data:
  evolution_rabbitmq_data:

